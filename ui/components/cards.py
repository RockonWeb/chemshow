"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
"""
import streamlit as st
from typing import Dict, Any, Optional
from .utils import (
    get_display_name, safe_get_value, format_mass, format_chemical_formula,
    create_external_links, create_pills_list, truncate_description
)
from .comparison import add_to_comparison_button, comparison_comparator

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–æ–≤
try:
    from ..main import open_dialog_safely
except ImportError:
    # Fallback –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ main.py –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω
    def open_dialog_safely(dialog_type: str, entity: Dict[str, Any]):
        """–†–µ–∑–µ—Ä–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞"""
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏
        st.session_state.show_metabolite_details = False
        st.session_state.show_enzyme_details = False
        st.session_state.show_protein_details = False
        st.session_state.show_carbohydrate_details = False
        st.session_state.show_lipid_details = False

        # –û—á–∏—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        st.session_state.selected_metabolite = None
        st.session_state.selected_enzyme = None
        st.session_state.selected_protein = None
        st.session_state.selected_carbohydrate = None
        st.session_state.selected_lipid = None

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –¥–∏–∞–ª–æ–≥
        if dialog_type == "metabolite":
            st.session_state.selected_metabolite = entity
            st.session_state.show_metabolite_details = True
        elif dialog_type == "enzyme":
            st.session_state.selected_enzyme = entity
            st.session_state.show_enzyme_details = True
        elif dialog_type == "protein":
            st.session_state.selected_protein = entity
            st.session_state.show_protein_details = True
        elif dialog_type == "carbohydrate":
            st.session_state.selected_carbohydrate = entity
            st.session_state.show_carbohydrate_details = True
        elif dialog_type == "lipid":
            st.session_state.selected_lipid = entity
            st.session_state.show_lipid_details = True


def render_metabolite_card(metabolite: Dict[str, Any], card_key: str) -> None:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –º–µ—Ç–∞–±–æ–ª–∏—Ç–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –¥–µ—Ç–∞–ª–µ–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    name = get_display_name(metabolite)
    formula = safe_get_value(metabolite, "formula", "‚Äî")
    mass = safe_get_value(metabolite, "exact_mass")
    mass_str = format_mass(mass, "Da")
    class_name = safe_get_value(metabolite, "class_name", "‚Äî")

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫–∏
    links = create_external_links("metabolite", metabolite)
    links_html = ""
    if links:
        link_items = [f"<span class='ext-link'><a href='{link['url']}' target='_blank'>{link['name']}</a></span>" for link in links]
        links_html = " &middot; ".join(link_items)

    # –°–æ–∑–¥–∞–µ–º pills –¥–ª—è –∫–ª–∞—Å—Å–∞
    pills_html = create_pills_list([class_name]) if class_name != "‚Äî" else ""

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É–ª—É
    formatted_formula = format_chemical_formula(formula)

    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    st.markdown(
        f"""
        <div class="card clickable-card" style="cursor: pointer;">
          <div class="card-title">{name}</div>
          <div class="card-subtitle">–§–æ—Ä–º—É–ª–∞: <b>{formatted_formula}</b><br>–ú–∞—Å—Å–∞: <b>{mass_str}</b></div>
          <div>{pills_html}</div>
          <div class="row-divider"></div>
          <div>{links_html}</div>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key=card_key, width='stretch'):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
            open_dialog_safely("metabolite", metabolite)

    with col2:
        add_to_comparison_button(metabolite, "metabolites", comparison_comparator)


def render_enzyme_card(enzyme: Dict[str, Any], card_key: str) -> None:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ —Ñ–µ—Ä–º–µ–Ω—Ç–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –¥–µ—Ç–∞–ª–µ–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    name = get_display_name(enzyme)
    ec_number = safe_get_value(enzyme, "ec_number", "‚Äî")
    organism = safe_get_value(enzyme, "organism", "‚Äî")
    family = safe_get_value(enzyme, "family", "‚Äî")

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫–∏
    links = create_external_links("enzyme", enzyme)
    links_html = ""
    if links:
        link_items = [f"<span class='ext-link'><a href='{link['url']}' target='_blank'>{link['name']}</a></span>" for link in links]
        links_html = " &middot; ".join(link_items)

    # –°–æ–∑–¥–∞–µ–º subtitle
    props = []
    if ec_number != "‚Äî":
        props.append(f"EC: <b>{ec_number}</b>")
    if organism != "‚Äî":
        props.append(f"–û—Ä–≥–∞–Ω–∏–∑–º: <b>{organism}</b>")
    if family != "‚Äî":
        props.append(f"–°–µ–º–µ–π—Å—Ç–≤–æ: <b>{family}</b>")
    subtitle = "<br>".join(props)

    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    st.markdown(
        f"""
        <div class="card clickable-card" style="cursor: pointer;">
          <div class="card-title">{name}</div>
          <div class="card-subtitle">{subtitle}</div>
          <div class="row-divider"></div>
          <div>{links_html}</div>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key=card_key, width='stretch'):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
            open_dialog_safely("enzyme", enzyme)

    with col2:
        add_to_comparison_button(enzyme, "enzymes", comparison_comparator)


def render_protein_card(protein: Dict[str, Any], card_key: str) -> None:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –±–µ–ª–∫–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –¥–µ—Ç–∞–ª–µ–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    name = get_display_name(protein)
    function = safe_get_value(protein, "function", "‚Äî")
    organism = safe_get_value(protein, "organism", "‚Äî")
    family = safe_get_value(protein, "family", "‚Äî")

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫–∏
    links = create_external_links("protein", protein)
    links_html = ""
    if links:
        link_items = [f"<span class='ext-link'><a href='{link['url']}' target='_blank'>{link['name']}</a></span>" for link in links]
        links_html = " &middot; ".join(link_items)

    # –°–æ–∑–¥–∞–µ–º subtitle
    props = []
    if function != "‚Äî":
        truncated_func = truncate_description(function)
        props.append(f"–§—É–Ω–∫—Ü–∏—è: <b>{truncated_func}</b>")
    if organism != "‚Äî":
        props.append(f"–û—Ä–≥–∞–Ω–∏–∑–º: <b>{organism}</b>")
    if family != "‚Äî":
        props.append(f"–°–µ–º–µ–π—Å—Ç–≤–æ: <b>{family}</b>")
    subtitle = "<br>".join(props)

    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    st.markdown(
        f"""
        <div class="card clickable-card" style="cursor: pointer;">
          <div class="card-title">{name}</div>
          <div class="card-subtitle">{subtitle}</div>
          <div class="row-divider"></div>
          <div>{links_html}</div>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key=card_key, width='stretch'):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
            open_dialog_safely("protein", protein)

    with col2:
        add_to_comparison_button(protein, "proteins", comparison_comparator)


def render_carbohydrate_card(carbohydrate: Dict[str, Any], card_key: str) -> None:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ —É–≥–ª–µ–≤–æ–¥–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –¥–µ—Ç–∞–ª–µ–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    name = get_display_name(carbohydrate)
    formula = safe_get_value(carbohydrate, "formula", "‚Äî")
    mass = safe_get_value(carbohydrate, "exact_mass")
    mass_str = format_mass(mass, "Da")
    carb_type = safe_get_value(carbohydrate, "type", "‚Äî")

    # –°–æ–∑–¥–∞–µ–º pills –¥–ª—è —Ç–∏–ø–∞
    pills_html = create_pills_list([carb_type]) if carb_type != "‚Äî" else ""

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É–ª—É
    formatted_formula = format_chemical_formula(formula)

    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    st.markdown(
        f"""
        <div class="card clickable-card" style="cursor: pointer;">
          <div class="card-title">{name}</div>
          <div class="card-subtitle">–§–æ—Ä–º—É–ª–∞: <b>{formatted_formula}</b><br>–ú–∞—Å—Å–∞: <b>{mass_str}</b></div>
          <div>{pills_html}</div>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key=card_key, width='stretch'):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
            open_dialog_safely("carbohydrate", carbohydrate)

    with col2:
        add_to_comparison_button(carbohydrate, "carbohydrates", comparison_comparator)


def render_lipid_card(lipid: Dict[str, Any], card_key: str) -> None:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –ª–∏–ø–∏–¥–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –¥–µ—Ç–∞–ª–µ–π"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    name = get_display_name(lipid)
    formula = safe_get_value(lipid, "formula", "‚Äî")
    mass = safe_get_value(lipid, "exact_mass")
    mass_str = format_mass(mass, "Da")
    lipid_type = safe_get_value(lipid, "type", "‚Äî")

    # –°–æ–∑–¥–∞–µ–º pills –¥–ª—è —Ç–∏–ø–∞
    pills_html = create_pills_list([lipid_type]) if lipid_type != "‚Äî" else ""

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É–ª—É
    formatted_formula = format_chemical_formula(formula)

    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    st.markdown(
        f"""
        <div class="card clickable-card" style="cursor: pointer;">
          <div class="card-title">{name}</div>
          <div class="card-subtitle">–§–æ—Ä–º—É–ª–∞: <b>{formatted_formula}</b><br>–ú–∞—Å—Å–∞: <b>{mass_str}</b></div>
          <div>{pills_html}</div>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key=card_key, width='stretch'):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
            open_dialog_safely("lipid", lipid)

    with col2:
        add_to_comparison_button(lipid, "lipids", comparison_comparator)
